<div id="process" class="process">
  <div class="container">
    <div class="section-header">
      <h2 class="section-title">{{ section.settings.title }}</h2>
      <p class="section-subtitle">{{ section.settings.subtitle }}</p>
    </div>
    <div class="process-steps">
      {% for block in section.blocks %}
        <div class="process-step fade-in-up" style="animation-delay: {{ forloop.index0 | times: 0.2 }}s;">
          <div class="step-number">{{ block.settings.step_number }}</div>
          <h3 class="step-title">{{ block.settings.step_title }}</h3>
          <p class="step-description">{{ block.settings.step_description }}</p>
        </div>
      {% endfor %}
    </div>
  </div>
</div>

<style>
  .process {
    background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%) !important;
    padding: 6rem 0 !important;
    position: relative !important;
    overflow: hidden !important;
  }

  .process::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="process-grid" width="25" height="25" patternUnits="userSpaceOnUse"><path d="M 25 0 L 0 0 0 25" fill="none" stroke="rgba(255,255,255,0.1)" stroke-width="0.5"/></pattern></defs><rect width="100" height="100" fill="url(%23process-grid)"/></svg>');
    animation: float 30s ease-in-out infinite !important;
    pointer-events: none !important;
  }

  .process .section-title {
    color: var(--white) !important;
    font-size: 4.5rem !important;
    background: linear-gradient(135deg, #ffffff 0%, rgba(255, 255, 255, 0.9) 100%) !important;
    -webkit-background-clip: text !important;
    background-clip: text !important;
    -webkit-text-fill-color: transparent !important;
    text-shadow: none !important;
  }

  .process .section-subtitle {
    color: rgba(255, 255, 255, 0.9) !important;
    font-size: 1.2rem !important;
  }

  .process-steps {
    display: grid !important;
    grid-template-columns: repeat(2, 1fr) !important;
    gap: 3rem !important;
    margin-top: 4rem !important;
    max-width: 1200px !important;
    margin-left: auto !important;
    margin-right: auto !important;
  }

  .process-step {
    text-align: center !important;
    position: relative !important;
    background: rgba(255, 255, 255, 0.1) !important;
    padding: 3.5rem 2.5rem !important;
    border-radius: 20px !important;
    backdrop-filter: blur(20px) !important;
    border: 1px solid rgba(255, 255, 255, 0.2) !important;
    transition: all 0.4s ease !important;
    min-height: 320px !important;
    display: flex !important;
    flex-direction: column !important;
    justify-content: center !important;
    opacity: 1 !important;
    transform: none !important;
  }

  .process-step-hidden {
    opacity: 0 !important;
    transform: translateY(40px) !important;
    transition: opacity 0.7s cubic-bezier(0.22, 1, 0.36, 1), transform 0.7s cubic-bezier(0.22, 1, 0.36, 1) !important;
  }

  .process-step-visible {
    opacity: 1 !important;
    transform: translateY(0) !important;
    transition: opacity 0.7s cubic-bezier(0.22, 1, 0.36, 1), transform 0.7s cubic-bezier(0.22, 1, 0.36, 1) !important;
  }

  .process-step:hover {
    transform: translateY(-10px) !important;
    background: rgba(255, 255, 255, 0.15) !important;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2) !important;
  }

  .step-number {
    width: 80px !important;
    height: 80px !important;
    background: linear-gradient(135deg, var(--white) 0%, rgba(255, 255, 255, 0.9) 100%) !important;
    border-radius: 50% !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    margin: 0 auto 2rem !important;
    color: var(--primary-color) !important;
    font-size: 2rem !important;
    font-weight: 700 !important;
    box-shadow: 0 10px 30px rgba(255, 255, 255, 0.3) !important;
    position: relative !important;
  }

  .step-number::before {
    content: '';
    position: absolute !important;
    top: -3px !important;
    left: -3px !important;
    right: -3px !important;
    bottom: -3px !important;
    background: linear-gradient(45deg, #3b82f6, #8b5cf6, #06d6a0, #3b82f6) !important;
    border-radius: 50% !important;
    z-index: -1 !important;
    opacity: 0 !important;
    transition: opacity 0.3s ease !important;
  }

  .process-step:hover .step-number::before {
    opacity: 0.8 !important;
  }

  .step-title {
    font-size: 1.8rem !important;
    font-weight: 600 !important;
    margin-bottom: 1.5rem !important;
    color: var(--white) !important;
    line-height: 1.3 !important;
  }

  .step-description {
    color: rgba(255, 255, 255, 0.85) !important;
    line-height: 1.6 !important;
    font-size: 1.2rem !important;
  }

  @media (max-width: 1200px) {
    .process-steps {
      grid-template-columns: repeat(2, 1fr) !important;
      gap: 2.5rem !important;
      max-width: 900px !important;
    }

    .process-step {
      padding: 3rem 2rem !important;
      min-height: 300px !important;
    }
  }

  @media (max-width: 768px) {
    .process-steps {
      grid-template-columns: 1fr !important;
      gap: 2rem !important;
      max-width: 400px !important;
    }

    .process-step {
      padding: 2.5rem 1.5rem !important;
      min-height: auto !important;
    }

    .step-title {
      font-size: 1.3rem !important;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const steps = document.querySelectorAll('.process-step');
    const revealOnScroll = () => {
      const triggerBottom = window.innerHeight * 0.85;
      steps.forEach(step => {
        const stepTop = step.getBoundingClientRect().top;
        if (stepTop < triggerBottom) {
          step.classList.add('process-step-visible');
        }
      });
    };
    // Set initial state
    steps.forEach(step => step.classList.add('process-step-hidden'));
    window.addEventListener('scroll', revealOnScroll);
    revealOnScroll();
  });
</script>

{% schema %}
{
  "name": "Process",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Notre Méthode Simplifiée"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "Un processus clair et transparent pour vous accompagner à chaque étape."
    }
  ],
  "blocks": [
    {
      "type": "step",
      "name": "Process Step",
      "settings": [
        {
          "type": "text",
          "id": "step_number",
          "label": "Step Number",
          "default": "01"
        },
        {
          "type": "text",
          "id": "step_title",
          "label": "Step Title",
          "default": "Consultation Initiale & Analyse des Besoins"
        },
        {
          "type": "textarea",
          "id": "step_description",
          "label": "Step Description",
          "default": "Nous commençons par une discussion approfondie pour comprendre vos objectifs, vos défis et vos attentes spécifiques."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Process",
      "blocks": [
        { "type": "step" },
        { "type": "step", "settings": { "step_number": "02", "step_title": "Élaboration d'une Stratégie Personnalisée", "step_description": "Sur la base de l'analyse, nous concevons une stratégie sur mesure, alignée sur vos ambitions et les particularités de votre secteur." } },
        { "type": "step", "settings": { "step_number": "03", "step_title": "Mise en Œuvre & Suivi Rigoureux", "step_description": "Nous déployons les solutions convenues et assurons un suivi constant pour ajuster la stratégie et garantir l'atteinte des résultats." } },
        { "type": "step", "settings": { "step_number": "04", "step_title": "Bilan & Optimisation Continue", "step_description": "Nous évaluons ensemble les performances et identifions les axes d'amélioration pour une croissance durable et pérenne." } }
      ]
    }
  ]
}
{% endschema %}
